[
    {
        "id": "b9d3aac694ac46cc",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "08924c97d30c22e7",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0410e01571bc92d7",
        "type": "ui_tab",
        "name": "MEDIBOX",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7c2ce483795771b7",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "011d1a9b8889783f",
        "type": "ui_group",
        "name": "Temperature ",
        "tab": "0410e01571bc92d7",
        "order": 1,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1a3e77f91c2f049a",
        "type": "ui_group",
        "name": "Humidity",
        "tab": "0410e01571bc92d7",
        "order": 2,
        "disp": true,
        "width": "3",
        "collapse": false,
        "className": ""
    },
    {
        "id": "936dbe1e1ac83177",
        "type": "ui_group",
        "name": "Main Switch",
        "tab": "0410e01571bc92d7",
        "order": 3,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f6e13cb558ed428c",
        "type": "ui_group",
        "name": "Schedule",
        "tab": "0410e01571bc92d7",
        "order": 4,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4f857e7f4e01be56",
        "type": "ui_group",
        "name": "Intensity",
        "tab": "0410e01571bc92d7",
        "order": 5,
        "disp": true,
        "width": "4",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3d8894798b073f27",
        "type": "ui_group",
        "name": "Shade Controller",
        "tab": "0410e01571bc92d7",
        "order": 6,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ba06920e0751ea14",
        "type": "mqtt in",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "topic": "ESP-temp-MEDI",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "08924c97d30c22e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 540,
        "wires": [
            [
                "320b60c1d3657fd7",
                "85483725d986b09e"
            ]
        ]
    },
    {
        "id": "320b60c1d3657fd7",
        "type": "ui_gauge",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "group": "011d1a9b8889783f",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{payload}}",
        "min": 0,
        "max": "40",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 730,
        "y": 460,
        "wires": []
    },
    {
        "id": "85483725d986b09e",
        "type": "ui_chart",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "group": "011d1a9b8889783f",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "ee905f44e11f303f",
        "type": "mqtt in",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "topic": "ESP-hum-MEDI",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "08924c97d30c22e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 460,
        "y": 780,
        "wires": [
            [
                "ed03fa7d2cd1b77f",
                "592b79c20e244a84"
            ]
        ]
    },
    {
        "id": "ed03fa7d2cd1b77f",
        "type": "ui_gauge",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "group": "1a3e77f91c2f049a",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{payload}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 750,
        "y": 680,
        "wires": []
    },
    {
        "id": "592b79c20e244a84",
        "type": "ui_chart",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "group": "1a3e77f91c2f049a",
        "order": 2,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 750,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "9eb6b811d506ddeb",
        "type": "ui_switch",
        "z": "b9d3aac694ac46cc",
        "name": "Switch",
        "label": "Switch",
        "tooltip": "",
        "group": "936dbe1e1ac83177",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "1",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "0",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "573394220281900d"
            ]
        ]
    },
    {
        "id": "573394220281900d",
        "type": "mqtt out",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "topic": "MEDI-MAIN-ON-OFF",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "08924c97d30c22e7",
        "x": 760,
        "y": 120,
        "wires": []
    },
    {
        "id": "188330b88139e119",
        "type": "ui_switch",
        "z": "b9d3aac694ac46cc",
        "name": "Schedule Switch",
        "label": "Switch",
        "tooltip": "",
        "group": "f6e13cb558ed428c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "payload",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 510,
        "y": 280,
        "wires": [
            [
                "b93e65674d660c90"
            ]
        ]
    },
    {
        "id": "b93e65674d660c90",
        "type": "change",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "isScheduled",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 280,
        "wires": [
            [
                "d0a22fd6956f6977"
            ]
        ]
    },
    {
        "id": "f616f62d8a34d9d8",
        "type": "ui_date_picker",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "label": "date",
        "group": "f6e13cb558ed428c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "6c0867c1555f8605"
            ]
        ]
    },
    {
        "id": "0381ce11eae301c0",
        "type": "ui_text_input",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "label": "",
        "tooltip": "",
        "group": "f6e13cb558ed428c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "time",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 520,
        "y": 380,
        "wires": [
            [
                "6ef0d41c25caeecc"
            ]
        ]
    },
    {
        "id": "6c0867c1555f8605",
        "type": "change",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ScheduledDate",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 320,
        "wires": [
            [
                "d0a22fd6956f6977"
            ]
        ]
    },
    {
        "id": "6ef0d41c25caeecc",
        "type": "change",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "ScheduledTime",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 380,
        "wires": [
            [
                "d0a22fd6956f6977"
            ]
        ]
    },
    {
        "id": "d0a22fd6956f6977",
        "type": "function",
        "z": "b9d3aac694ac46cc",
        "name": "function 1",
        "func": "let isScheduled  =  global.get(\"isScheduled\");\nlet ScheduledDate = global.get(\"ScheduledDate\");\nlet ScheduledTime = global.get(\"ScheduledTime\");\n\nif(isScheduled && ScheduledDate &&ScheduledTime){\n    let Schedule = ScheduledDate + ScheduledTime;\n\n    if( Date.now() > Schedule){\n        return{\n            payload:\"OLDER\",\n            }\n            \n        }else{\n        return{\n            payload:Schedule,\n        }\n\n        }\n    }else if(isScheduled===false){\n        return{\n            payload:\"Not Schedule ON\",\n        }\n    }else{\n        return{\n            payload:null\n        }\n    }\n    \n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 320,
        "wires": [
            [
                "50be8920681a19d8"
            ]
        ]
    },
    {
        "id": "50be8920681a19d8",
        "type": "switch",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Not Schedule ON",
                "vt": "str"
            },
            {
                "t": "nnull"
            },
            {
                "t": "eq",
                "v": "OLDER",
                "vt": "str"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 4,
        "x": 1290,
        "y": 320,
        "wires": [
            [
                "cd964625e9a1f03f"
            ],
            [
                "ac47d7d2d5dd068d"
            ],
            [
                "8b05cba9de6e4571"
            ],
            [
                "4136b34fe77a8e84"
            ]
        ]
    },
    {
        "id": "cd964625e9a1f03f",
        "type": "function",
        "z": "b9d3aac694ac46cc",
        "name": "function 2",
        "func": "\nreturn{\n    payload:msg.payload,\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 220,
        "wires": [
            [
                "c24d70e2f8789dba",
                "76b5418884d0e578"
            ]
        ]
    },
    {
        "id": "ac47d7d2d5dd068d",
        "type": "function",
        "z": "b9d3aac694ac46cc",
        "name": "function 3",
        "func": "\nreturn {\n    payload:Math.round(msg.payload/1000),\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 300,
        "wires": [
            [
                "c24d70e2f8789dba",
                "76b5418884d0e578"
            ]
        ]
    },
    {
        "id": "8b05cba9de6e4571",
        "type": "function",
        "z": "b9d3aac694ac46cc",
        "name": "function 4",
        "func": "\nreturn{\n    payload:\"Enter corrrect Date and Future Time\"\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 360,
        "wires": [
            [
                "a8b867fe905786dd"
            ]
        ]
    },
    {
        "id": "4136b34fe77a8e84",
        "type": "function",
        "z": "b9d3aac694ac46cc",
        "name": "function 5",
        "func": "\nreturn{\n    payload:\"Enter Date and Time\"\n};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1500,
        "y": 440,
        "wires": [
            [
                "a8b867fe905786dd"
            ]
        ]
    },
    {
        "id": "a8b867fe905786dd",
        "type": "ui_toast",
        "z": "b9d3aac694ac46cc",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1790,
        "y": 400,
        "wires": []
    },
    {
        "id": "c24d70e2f8789dba",
        "type": "mqtt out",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "topic": "SCHEDULE SWITCH",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "08924c97d30c22e7",
        "x": 1780,
        "y": 260,
        "wires": []
    },
    {
        "id": "76b5418884d0e578",
        "type": "debug",
        "z": "b9d3aac694ac46cc",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1780,
        "y": 160,
        "wires": []
    },
    {
        "id": "e3ccd02719f22dc7",
        "type": "mqtt in",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "topic": "Max Intensity Of LDR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "08924c97d30c22e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 480,
        "y": 940,
        "wires": [
            [
                "264f78c3a5f32150",
                "f7a491e2244f8f67"
            ]
        ]
    },
    {
        "id": "70464b42b9e7d022",
        "type": "mqtt in",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "topic": "LEFT OR RIGHT LDR",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "08924c97d30c22e7",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 1240,
        "y": 900,
        "wires": [
            [
                "b048b1e6b32c36f2"
            ]
        ]
    },
    {
        "id": "264f78c3a5f32150",
        "type": "ui_gauge",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "group": "4f857e7f4e01be56",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "gauge",
        "label": "units",
        "format": "{{payload}}",
        "min": 0,
        "max": "1",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 810,
        "y": 860,
        "wires": []
    },
    {
        "id": "f7a491e2244f8f67",
        "type": "ui_chart",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "group": "4f857e7f4e01be56",
        "order": 3,
        "width": 0,
        "height": 0,
        "label": "chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 830,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "b048b1e6b32c36f2",
        "type": "switch",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "L",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "R",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1550,
        "y": 900,
        "wires": [
            [
                "059d3866b96f72f9"
            ],
            [
                "059d3866b96f72f9"
            ]
        ]
    },
    {
        "id": "059d3866b96f72f9",
        "type": "ui_text",
        "z": "b9d3aac694ac46cc",
        "group": "4f857e7f4e01be56",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "Max Intensity L or R",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1800,
        "y": 900,
        "wires": []
    },
    {
        "id": "16b765ffdecedb28",
        "type": "ui_dropdown",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "label": "Select ",
        "tooltip": "",
        "place": "Select option",
        "group": "3d8894798b073f27",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "medicine-1",
                "value": "medicine-1",
                "type": "str"
            },
            {
                "label": "medicine-2",
                "value": "medicine-2",
                "type": "str"
            },
            {
                "label": "medicine-3",
                "value": "medicine-3",
                "type": "str"
            },
            {
                "label": "Custom",
                "value": "Custom",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "payload",
        "topicType": "msg",
        "className": "",
        "x": 1170,
        "y": 1500,
        "wires": [
            [
                "987133f1b99a8342",
                "e7c33fa1b0e29592"
            ]
        ]
    },
    {
        "id": "5e63bd8de9d3b4f9",
        "type": "ui_slider",
        "z": "b9d3aac694ac46cc",
        "name": "Min Angle slider",
        "label": "Min Angle",
        "tooltip": "",
        "group": "3d8894798b073f27",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": "0",
        "max": "120",
        "step": 1,
        "className": "",
        "x": 420,
        "y": 1220,
        "wires": [
            [
                "ff66246c165b0cdc"
            ]
        ]
    },
    {
        "id": "63f3415df8d195a2",
        "type": "ui_slider",
        "z": "b9d3aac694ac46cc",
        "name": "Controlling Factor slider",
        "label": "Controlling Factor",
        "tooltip": "",
        "group": "3d8894798b073f27",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "1",
        "step": "0.01",
        "className": "",
        "x": 450,
        "y": 1340,
        "wires": [
            [
                "25e30c36b8d42f42"
            ]
        ]
    },
    {
        "id": "ff66246c165b0cdc",
        "type": "ui_text_input",
        "z": "b9d3aac694ac46cc",
        "name": "Min Angle value",
        "label": "Min Angle",
        "tooltip": "",
        "group": "3d8894798b073f27",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 680,
        "y": 1220,
        "wires": [
            [
                "8a3ecb3629c81822"
            ]
        ]
    },
    {
        "id": "25e30c36b8d42f42",
        "type": "ui_text_input",
        "z": "b9d3aac694ac46cc",
        "name": "Controlling Factor value",
        "label": "Controlling Factor",
        "tooltip": "",
        "group": "3d8894798b073f27",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 750,
        "y": 1340,
        "wires": [
            [
                "04e47911656c2351"
            ]
        ]
    },
    {
        "id": "987133f1b99a8342",
        "type": "function",
        "z": "b9d3aac694ac46cc",
        "name": "function 6",
        "func": "let select_medicine = msg.payload;\nlet MinAngle = global.get(\"MinAngle\");\n//let Controlling_factor;\n\nswitch (select_medicine) {\n    case \"medicine-1\":\n        MinAngle = 10; \n        break;\n    case \"medicine-2\":\n        MinAngle = 25;\n        break;\n    case \"medicine-3\":\n        MinAngle = 55;\n        break;\n    case \"Custom\":\n        MinAngle = MinAngle;\n        break;\n}\nreturn{\n    payload:MinAngle\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1340,
        "wires": [
            [
                "c1fc6b16d1f594d1",
                "36339334fbda80d7"
            ]
        ]
    },
    {
        "id": "c1fc6b16d1f594d1",
        "type": "ui_text_input",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "label": "Min Angle(set)",
        "tooltip": "",
        "group": "3d8894798b073f27",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1600,
        "y": 1200,
        "wires": [
            [
                "c115a5cc46adf3ce"
            ]
        ]
    },
    {
        "id": "8a3ecb3629c81822",
        "type": "change",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "MinAngle",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 1240,
        "wires": [
            [
                "16b765ffdecedb28"
            ]
        ]
    },
    {
        "id": "04e47911656c2351",
        "type": "change",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Controlling_factor",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 920,
        "y": 1460,
        "wires": [
            [
                "16b765ffdecedb28"
            ]
        ]
    },
    {
        "id": "1fc1e57b8520f189",
        "type": "ui_text_input",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "label": "Controlling factor(set)",
        "tooltip": "",
        "group": "3d8894798b073f27",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "payload",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1600,
        "y": 1400,
        "wires": [
            [
                "796fab838a931782"
            ]
        ]
    },
    {
        "id": "36339334fbda80d7",
        "type": "debug",
        "z": "b9d3aac694ac46cc",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1540,
        "y": 1120,
        "wires": []
    },
    {
        "id": "91707c46d93bcc41",
        "type": "debug",
        "z": "b9d3aac694ac46cc",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 1460,
        "wires": []
    },
    {
        "id": "e7c33fa1b0e29592",
        "type": "function",
        "z": "b9d3aac694ac46cc",
        "name": "function 7",
        "func": "let select_medicine = msg.payload;\n//let MinAngle = global.get(\"MinAngle\");\nlet Controlling_factor = global.get(\"Controlling_factor\");\n\nswitch (select_medicine) {\n    case \"medicine-1\":\n        Controlling_factor = 0.12; \n        break;\n    case \"medicine-2\":\n        Controlling_factor =  0.86;\n        break;\n    case \"medicine-3\":\n        Controlling_factor = 0.54;\n        break;\n    case \"Custom\":\n        Controlling_factor = Controlling_factor;\n        break;\n}\nreturn{\n    payload:Controlling_factor\n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1440,
        "wires": [
            [
                "1fc1e57b8520f189",
                "91707c46d93bcc41"
            ]
        ]
    },
    {
        "id": "c115a5cc46adf3ce",
        "type": "mqtt out",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "topic": "Min Angle Servo",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "08924c97d30c22e7",
        "x": 1840,
        "y": 1200,
        "wires": []
    },
    {
        "id": "796fab838a931782",
        "type": "mqtt out",
        "z": "b9d3aac694ac46cc",
        "name": "",
        "topic": "Controlling Factor Servo",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "08924c97d30c22e7",
        "x": 1850,
        "y": 1400,
        "wires": []
    }
]